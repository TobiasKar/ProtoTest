// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from messages.proto</summary>
public static partial class MessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for messages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg5tZXNzYWdlcy5wcm90byJZCg1TdGF0dXNNZXNzYWdlEhEKCUhlYWRzZXRJ",
          "RBgBIAEoCRIUCgxCYXR0ZXJ5TGV2ZWwYAiABKAESHwoIQmF0U3RhdGUYAyAB",
          "KA4yDS5CYXR0ZXJ5U3RhdGUqRQoMQmF0dGVyeVN0YXRlEgsKB1Vua25vd24Q",
          "ABIMCghDaGFyZ2luZxABEhAKDERpc2NoYXJjaGluZxACEggKBEZ1bGwQA2IG",
          "cHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::BatteryState), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::StatusMessage), global::StatusMessage.Parser, new[]{ "HeadsetID", "BatteryLevel", "BatState" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum BatteryState {
  [pbr::OriginalName("Unknown")] Unknown = 0,
  [pbr::OriginalName("Charging")] Charging = 1,
  [pbr::OriginalName("Discharching")] Discharching = 2,
  [pbr::OriginalName("Full")] Full = 3,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class StatusMessage : pb::IMessage<StatusMessage>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<StatusMessage> _parser = new pb::MessageParser<StatusMessage>(() => new StatusMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<StatusMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public StatusMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public StatusMessage(StatusMessage other) : this() {
    headsetID_ = other.headsetID_;
    batteryLevel_ = other.batteryLevel_;
    batState_ = other.batState_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public StatusMessage Clone() {
    return new StatusMessage(this);
  }

  /// <summary>Field number for the "HeadsetID" field.</summary>
  public const int HeadsetIDFieldNumber = 1;
  private string headsetID_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string HeadsetID {
    get { return headsetID_; }
    set {
      headsetID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "BatteryLevel" field.</summary>
  public const int BatteryLevelFieldNumber = 2;
  private double batteryLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double BatteryLevel {
    get { return batteryLevel_; }
    set {
      batteryLevel_ = value;
    }
  }

  /// <summary>Field number for the "BatState" field.</summary>
  public const int BatStateFieldNumber = 3;
  private global::BatteryState batState_ = global::BatteryState.Unknown;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::BatteryState BatState {
    get { return batState_; }
    set {
      batState_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as StatusMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(StatusMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HeadsetID != other.HeadsetID) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BatteryLevel, other.BatteryLevel)) return false;
    if (BatState != other.BatState) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HeadsetID.Length != 0) hash ^= HeadsetID.GetHashCode();
    if (BatteryLevel != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BatteryLevel);
    if (BatState != global::BatteryState.Unknown) hash ^= BatState.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HeadsetID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HeadsetID);
    }
    if (BatteryLevel != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(BatteryLevel);
    }
    if (BatState != global::BatteryState.Unknown) {
      output.WriteRawTag(24);
      output.WriteEnum((int) BatState);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HeadsetID.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HeadsetID);
    }
    if (BatteryLevel != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(BatteryLevel);
    }
    if (BatState != global::BatteryState.Unknown) {
      output.WriteRawTag(24);
      output.WriteEnum((int) BatState);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HeadsetID.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HeadsetID);
    }
    if (BatteryLevel != 0D) {
      size += 1 + 8;
    }
    if (BatState != global::BatteryState.Unknown) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BatState);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(StatusMessage other) {
    if (other == null) {
      return;
    }
    if (other.HeadsetID.Length != 0) {
      HeadsetID = other.HeadsetID;
    }
    if (other.BatteryLevel != 0D) {
      BatteryLevel = other.BatteryLevel;
    }
    if (other.BatState != global::BatteryState.Unknown) {
      BatState = other.BatState;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HeadsetID = input.ReadString();
          break;
        }
        case 17: {
          BatteryLevel = input.ReadDouble();
          break;
        }
        case 24: {
          BatState = (global::BatteryState) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          HeadsetID = input.ReadString();
          break;
        }
        case 17: {
          BatteryLevel = input.ReadDouble();
          break;
        }
        case 24: {
          BatState = (global::BatteryState) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
